# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Reservation {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  startDate: String!
  endDate: String!
  stripeChargeId: String
  total: Float!
  user: User!
  userId: Float!
  parkingSpot: ParkingSpot!
  parkingSpotId: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ParkingSpot {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  lat: Float!
  lng: Float!
  price: Float!
  picture_url: String
  daysAvailable: [Float!]!
  startHour: Float
  endHour: Float
  street: String
  zipCode: String
  city: String
  country: String
  user: User!
  userId: Float!
  reservations: [Reservation!]
  complains: User
}

type Complain {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  description: String!
  pictureUrl: String
  user: User!
  userId: Float!
  parkingSpot: ParkingSpot!
  parkingSpotId: Float!
}

type Todo {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  completed: Boolean
  user: User!
  userId: Float!
}

type User {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  phone: String
  pictureUrl: String
  roles: [Role!]!
  reservations: [Reservation!]
  complains: [Complain!]
  bankInfo: String
  parkingSpots: [ParkingSpot!]
  todos: [Todo!]
}

enum Role {
  USER
  RENTER
  ADMIN
}

type SeriesDataItem {
  date: String!
  sum: Float!
}

type BusinessStatsResponse {
  totalReservations: Float!
  totalRevenue: Float!
  totalComplaints: Float!
  timeSeries: [SeriesDataItem!]!
}

type AuthResponse {
  accessToken: String!
  user: User!
}

type RenterCalendarResponse {
  spot: Float!
  startHour: Float!
  endHour: Float!
  name: String!
}

type Query {
  """Get logged in user"""
  me: User

  """List all Users"""
  findAllUsers: [User!]!

  """Find one User"""
  findOneUser(id: ID!): User!
  getMyBusinessStats: BusinessStatsResponse!

  """List all Todos"""
  findAllTodos: [Todo!]!

  """Find one Todo"""
  findOneTodo(id: ID!): Todo!
  protect: String!

  """Find all Reservations"""
  findAllReservations: [Reservation!]!

  """Find one Reservation"""
  findOneReservation(id: ID!): Reservation!

  """Find Drivers reservations"""
  findMyReservations: [Reservation!]!

  """Find all ParkingSpots"""
  findAllParkingSpots: [ParkingSpot!]!

  """Find one ParkingSpot"""
  findOneParkingSpot(id: ID!): ParkingSpot!

  """Find logged in user's ParkingSpots"""
  findMyParkingSpots: [ParkingSpot!]!

  """Find parking spots near coords"""
  findNearParkingSpots(input: NearParkingSpotsInput!): [ParkingSpot!]!

  """Find user's ParkingSpots reservations and profit"""
  findCalendarInfo: [RenterCalendarResponse!]!

  """Find all Complains"""
  findAllComplains: [Complain!]!

  """Find one Complain"""
  findOneComplain(id: ID!): Complain!

  """Find Complains about renters parking spaces"""
  findMyComplains: [Complain!]!
}

input NearParkingSpotsInput {
  lat: Float!
  lng: Float!

  """Radius in Km"""
  searchRadius: Float!
}

type Mutation {
  """Login user"""
  login(input: LoginInput!): AuthResponse!

  """Register user"""
  register(input: RegisterInput!): User!

  """Logout user"""
  logout: Boolean!

  """Logout user"""
  updateProfile(input: ProfileInput!): AuthResponse!

  """Create User"""
  createUser(input: UserInput!): User!

  """Update User"""
  updateUser(input: UserInput!, id: ID!): User!

  """Delete User"""
  deleteUser(id: ID!): User!

  """Custom Create Todo"""
  createTodo(input: TodoInput!): Todo!

  """Update Todo"""
  updateTodo(input: TodoInput!, id: ID!): Todo!

  """Delete Todo"""
  deleteTodo(id: ID!): Todo!

  """Create Reservation"""
  createReservation(input: ReservationInput!): Reservation!

  """Update Reservation"""
  updateReservation(input: ReservationInput!, id: ID!): Reservation!

  """Delete Reservation"""
  deleteReservation(id: ID!): Reservation!

  """Create ParkingSpot"""
  createParkingSpot(input: ParkingSpotInput!): ParkingSpot!

  """Update ParkingSpot"""
  updateParkingSpot(input: ParkingSpotInput!, id: ID!): ParkingSpot!

  """Delete ParkingSpot"""
  deleteParkingSpot(id: ID!): ParkingSpot!

  """Create Complain"""
  createComplain(input: ComplainInput!): Complain!

  """Update Complain"""
  updateComplain(input: ComplainInput!, id: ID!): Complain!

  """Delete Complain"""
  deleteComplain(id: ID!): Complain!
}

input LoginInput {
  email: String!
  password: String!
}

input RegisterInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}

input ProfileInput {
  firstName: String
  lastName: String
  phone: String
  bankInfo: String
  password: String
}

input UserInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}

input TodoInput {
  title: String
  completed: Boolean
}

input ReservationInput {
  startDate: String!
  endDate: String!
  total: Float!
  parkingSpotId: ID!
}

input ParkingSpotInput {
  price: Float
  lat: Float
  lng: Float
  daysAvailable: [Float!]!
  startHour: Float!
  endHour: Float!
}

input ComplainInput {
  description: String!
  pictureUrl: String
  parkingSpotId: ID!
}
